//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.34209 版自动生成。
// 
#pragma warning disable 1591

namespace UI.Test {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSFacesSoap", Namespace="http://tempuri.org/")]
    public partial class WSFaces : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserIdAndPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificationCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFacesMoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvatarOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenPliceFaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback RealNameAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScanCodeGenOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoopQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoopQuerysOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPaymentRecordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSFaces() {
            this.Url = global::UI.Properties.Settings.Default.UI_Test_WSFaces;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserIdAndPhoneCompletedEventHandler GetUserIdAndPhoneCompleted;
        
        /// <remarks/>
        public event VerificationCodeCompletedEventHandler VerificationCodeCompleted;
        
        /// <remarks/>
        public event CheckFacesMoreCompletedEventHandler CheckFacesMoreCompleted;
        
        /// <remarks/>
        public event GetAvatarCompletedEventHandler GetAvatarCompleted;
        
        /// <remarks/>
        public event AuthenPliceFaceCompletedEventHandler AuthenPliceFaceCompleted;
        
        /// <remarks/>
        public event UserRegisterCompletedEventHandler UserRegisterCompleted;
        
        /// <remarks/>
        public event RealNameAuthCompletedEventHandler RealNameAuthCompleted;
        
        /// <remarks/>
        public event ScanCodeGenCompletedEventHandler ScanCodeGenCompleted;
        
        /// <remarks/>
        public event LoopQueryCompletedEventHandler LoopQueryCompleted;
        
        /// <remarks/>
        public event LoopQuerysCompletedEventHandler LoopQuerysCompleted;
        
        /// <remarks/>
        public event AddPaymentRecordCompletedEventHandler AddPaymentRecordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserIdAndPhone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserIdAndPhone(string Phone, string ID) {
            object[] results = this.Invoke("GetUserIdAndPhone", new object[] {
                        Phone,
                        ID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIdAndPhoneAsync(string Phone, string ID) {
            this.GetUserIdAndPhoneAsync(Phone, ID, null);
        }
        
        /// <remarks/>
        public void GetUserIdAndPhoneAsync(string Phone, string ID, object userState) {
            if ((this.GetUserIdAndPhoneOperationCompleted == null)) {
                this.GetUserIdAndPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIdAndPhoneOperationCompleted);
            }
            this.InvokeAsync("GetUserIdAndPhone", new object[] {
                        Phone,
                        ID}, this.GetUserIdAndPhoneOperationCompleted, userState);
        }
        
        private void OnGetUserIdAndPhoneOperationCompleted(object arg) {
            if ((this.GetUserIdAndPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIdAndPhoneCompleted(this, new GetUserIdAndPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerificationCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VerificationCode(string Phone) {
            object[] results = this.Invoke("VerificationCode", new object[] {
                        Phone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerificationCodeAsync(string Phone) {
            this.VerificationCodeAsync(Phone, null);
        }
        
        /// <remarks/>
        public void VerificationCodeAsync(string Phone, object userState) {
            if ((this.VerificationCodeOperationCompleted == null)) {
                this.VerificationCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificationCodeOperationCompleted);
            }
            this.InvokeAsync("VerificationCode", new object[] {
                        Phone}, this.VerificationCodeOperationCompleted, userState);
        }
        
        private void OnVerificationCodeOperationCompleted(object arg) {
            if ((this.VerificationCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificationCodeCompleted(this, new VerificationCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFacesMore", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckFacesMore([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bytes, string keyCode) {
            object[] results = this.Invoke("CheckFacesMore", new object[] {
                        bytes,
                        keyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFacesMoreAsync(byte[] bytes, string keyCode) {
            this.CheckFacesMoreAsync(bytes, keyCode, null);
        }
        
        /// <remarks/>
        public void CheckFacesMoreAsync(byte[] bytes, string keyCode, object userState) {
            if ((this.CheckFacesMoreOperationCompleted == null)) {
                this.CheckFacesMoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFacesMoreOperationCompleted);
            }
            this.InvokeAsync("CheckFacesMore", new object[] {
                        bytes,
                        keyCode}, this.CheckFacesMoreOperationCompleted, userState);
        }
        
        private void OnCheckFacesMoreOperationCompleted(object arg) {
            if ((this.CheckFacesMoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFacesMoreCompleted(this, new CheckFacesMoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvatar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAvatar(string sfz, string sjh) {
            object[] results = this.Invoke("GetAvatar", new object[] {
                        sfz,
                        sjh});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvatarAsync(string sfz, string sjh) {
            this.GetAvatarAsync(sfz, sjh, null);
        }
        
        /// <remarks/>
        public void GetAvatarAsync(string sfz, string sjh, object userState) {
            if ((this.GetAvatarOperationCompleted == null)) {
                this.GetAvatarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvatarOperationCompleted);
            }
            this.InvokeAsync("GetAvatar", new object[] {
                        sfz,
                        sjh}, this.GetAvatarOperationCompleted, userState);
        }
        
        private void OnGetAvatarOperationCompleted(object arg) {
            if ((this.GetAvatarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvatarCompleted(this, new GetAvatarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenPliceFace", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthenPliceFace(string IdCard, string RealName,string Phone,string Nation,string Address, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bytes) {
            object[] results = this.Invoke("AuthenPliceFace", new object[] {
                        IdCard,
                        RealName,
                        Phone,
                        Nation,
                        Address,
                        bytes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenPliceFaceAsync(string IdCard, string RealName, byte[] bytes) {
            this.AuthenPliceFaceAsync(IdCard, RealName, bytes, null);
        }
        
        /// <remarks/>
        public void AuthenPliceFaceAsync(string IdCard, string RealName, byte[] bytes, object userState) {
            if ((this.AuthenPliceFaceOperationCompleted == null)) {
                this.AuthenPliceFaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenPliceFaceOperationCompleted);
            }
            this.InvokeAsync("AuthenPliceFace", new object[] {
                        IdCard,
                        RealName,
                        bytes}, this.AuthenPliceFaceOperationCompleted, userState);
        }
        
        private void OnAuthenPliceFaceOperationCompleted(object arg) {
            if ((this.AuthenPliceFaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenPliceFaceCompleted(this, new AuthenPliceFaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserRegister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserRegister([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bytes, string Phone, string IDno, string RealName, string LoginPass, int VerifyFlag, int CardType, string MedicareNo, string Address) {
            object[] results = this.Invoke("UserRegister", new object[] {
                        bytes,
                        Phone,
                        IDno,
                        RealName,
                        LoginPass,
                        VerifyFlag,
                        CardType,
                        MedicareNo,
                        Address});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UserRegisterAsync(byte[] bytes, string Phone, string IDno, string RealName, string LoginPass, int VerifyFlag, int CardType, string MedicareNo, string Address) {
            this.UserRegisterAsync(bytes, Phone, IDno, RealName, LoginPass, VerifyFlag, CardType, MedicareNo, Address, null);
        }
        
        /// <remarks/>
        public void UserRegisterAsync(byte[] bytes, string Phone, string IDno, string RealName, string LoginPass, int VerifyFlag, int CardType, string MedicareNo, string Address, object userState) {
            if ((this.UserRegisterOperationCompleted == null)) {
                this.UserRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserRegisterOperationCompleted);
            }
            this.InvokeAsync("UserRegister", new object[] {
                        bytes,
                        Phone,
                        IDno,
                        RealName,
                        LoginPass,
                        VerifyFlag,
                        CardType,
                        MedicareNo,
                        Address}, this.UserRegisterOperationCompleted, userState);
        }
        
        private void OnUserRegisterOperationCompleted(object arg) {
            if ((this.UserRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserRegisterCompleted(this, new UserRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RealNameAuth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RealNameAuth(string IdCard, string RealName, string Phone, string HospCode) {
            this.Invoke("RealNameAuth", new object[] {
                        IdCard,
                        RealName,
                        Phone,
                        HospCode});
        }
        
        /// <remarks/>
        public void RealNameAuthAsync(string IdCard, string RealName, string Phone, string HospCode) {
            this.RealNameAuthAsync(IdCard, RealName, Phone, HospCode, null);
        }
        
        /// <remarks/>
        public void RealNameAuthAsync(string IdCard, string RealName, string Phone, string HospCode, object userState) {
            if ((this.RealNameAuthOperationCompleted == null)) {
                this.RealNameAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRealNameAuthOperationCompleted);
            }
            this.InvokeAsync("RealNameAuth", new object[] {
                        IdCard,
                        RealName,
                        Phone,
                        HospCode}, this.RealNameAuthOperationCompleted, userState);
        }
        
        private void OnRealNameAuthOperationCompleted(object arg) {
            if ((this.RealNameAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RealNameAuthCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanCodeGen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ScanCodeGen(string orderName, string orderAmount, string outTradeNo) {
            object[] results = this.Invoke("ScanCodeGen", new object[] {
                        orderName,
                        orderAmount,
                        outTradeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ScanCodeGenAsync(string orderName, string orderAmount, string outTradeNo) {
            this.ScanCodeGenAsync(orderName, orderAmount, outTradeNo, null);
        }
        
        /// <remarks/>
        public void ScanCodeGenAsync(string orderName, string orderAmount, string outTradeNo, object userState) {
            if ((this.ScanCodeGenOperationCompleted == null)) {
                this.ScanCodeGenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScanCodeGenOperationCompleted);
            }
            this.InvokeAsync("ScanCodeGen", new object[] {
                        orderName,
                        orderAmount,
                        outTradeNo}, this.ScanCodeGenOperationCompleted, userState);
        }
        
        private void OnScanCodeGenOperationCompleted(object arg) {
            if ((this.ScanCodeGenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScanCodeGenCompleted(this, new ScanCodeGenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoopQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoopQuery(object o) {
            object[] results = this.Invoke("LoopQuery", new object[] {
                        o});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoopQueryAsync(object o) {
            this.LoopQueryAsync(o, null);
        }
        
        /// <remarks/>
        public void LoopQueryAsync(object o, object userState) {
            if ((this.LoopQueryOperationCompleted == null)) {
                this.LoopQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoopQueryOperationCompleted);
            }
            this.InvokeAsync("LoopQuery", new object[] {
                        o}, this.LoopQueryOperationCompleted, userState);
        }
        
        private void OnLoopQueryOperationCompleted(object arg) {
            if ((this.LoopQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoopQueryCompleted(this, new LoopQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoopQuerys", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoopQuerys(object o) {
            object[] results = this.Invoke("LoopQuerys", new object[] {
                        o});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoopQuerysAsync(object o) {
            this.LoopQuerysAsync(o, null);
        }
        
        /// <remarks/>
        public void LoopQuerysAsync(object o, object userState) {
            if ((this.LoopQuerysOperationCompleted == null)) {
                this.LoopQuerysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoopQuerysOperationCompleted);
            }
            this.InvokeAsync("LoopQuerys", new object[] {
                        o}, this.LoopQuerysOperationCompleted, userState);
        }
        
        private void OnLoopQuerysOperationCompleted(object arg) {
            if ((this.LoopQuerysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoopQuerysCompleted(this, new LoopQuerysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPaymentRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddPaymentRecord(string HospCode, string HisOrderNum, string Billnumber, string Billmoney, string Source, string UserId, string Payment, string Sourceaccount) {
            object[] results = this.Invoke("AddPaymentRecord", new object[] {
                        HospCode,
                        HisOrderNum,
                        Billnumber,
                        Billmoney,
                        Source,
                        UserId,
                        Payment,
                        Sourceaccount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddPaymentRecordAsync(string HospCode, string HisOrderNum, string Billnumber, string Billmoney, string Source, string UserId, string Payment, string Sourceaccount) {
            this.AddPaymentRecordAsync(HospCode, HisOrderNum, Billnumber, Billmoney, Source, UserId, Payment, Sourceaccount, null);
        }
        
        /// <remarks/>
        public void AddPaymentRecordAsync(string HospCode, string HisOrderNum, string Billnumber, string Billmoney, string Source, string UserId, string Payment, string Sourceaccount, object userState) {
            if ((this.AddPaymentRecordOperationCompleted == null)) {
                this.AddPaymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPaymentRecordOperationCompleted);
            }
            this.InvokeAsync("AddPaymentRecord", new object[] {
                        HospCode,
                        HisOrderNum,
                        Billnumber,
                        Billmoney,
                        Source,
                        UserId,
                        Payment,
                        Sourceaccount}, this.AddPaymentRecordOperationCompleted, userState);
        }
        
        private void OnAddPaymentRecordOperationCompleted(object arg) {
            if ((this.AddPaymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPaymentRecordCompleted(this, new AddPaymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetUserIdAndPhoneCompletedEventHandler(object sender, GetUserIdAndPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIdAndPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIdAndPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void VerificationCodeCompletedEventHandler(object sender, VerificationCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificationCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificationCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckFacesMoreCompletedEventHandler(object sender, CheckFacesMoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFacesMoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFacesMoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetAvatarCompletedEventHandler(object sender, GetAvatarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvatarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvatarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AuthenPliceFaceCompletedEventHandler(object sender, AuthenPliceFaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenPliceFaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenPliceFaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UserRegisterCompletedEventHandler(object sender, UserRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void RealNameAuthCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ScanCodeGenCompletedEventHandler(object sender, ScanCodeGenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScanCodeGenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScanCodeGenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LoopQueryCompletedEventHandler(object sender, LoopQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoopQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoopQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LoopQuerysCompletedEventHandler(object sender, LoopQuerysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoopQuerysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoopQuerysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddPaymentRecordCompletedEventHandler(object sender, AddPaymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPaymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPaymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591