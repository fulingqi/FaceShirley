//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace UI.LS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LiShuiServerSoap", Namespace="http://tempuri.org/")]
    public partial class LiShuiServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckFacesMoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback JKKOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJKKOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserRegisterOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LiShuiServer() {
            this.Url = global::UI.Properties.Settings.Default.UI_jiami_LiShuiServer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckFacesMoreCompletedEventHandler CheckFacesMoreCompleted;
        
        /// <remarks/>
        public event UserInfoCompletedEventHandler UserInfoCompleted;
        
        /// <remarks/>
        public event JKKCompletedEventHandler JKKCompleted;
        
        /// <remarks/>
        public event getJKKCompletedEventHandler getJKKCompleted;
        
        /// <remarks/>
        public event UserRegisterCompletedEventHandler UserRegisterCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFacesMore", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckFacesMore([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bytes, string keyCode) {
            object[] results = this.Invoke("CheckFacesMore", new object[] {
                        bytes,
                        keyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFacesMoreAsync(byte[] bytes, string keyCode) {
            this.CheckFacesMoreAsync(bytes, keyCode, null);
        }
        
        /// <remarks/>
        public void CheckFacesMoreAsync(byte[] bytes, string keyCode, object userState) {
            if ((this.CheckFacesMoreOperationCompleted == null)) {
                this.CheckFacesMoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFacesMoreOperationCompleted);
            }
            this.InvokeAsync("CheckFacesMore", new object[] {
                        bytes,
                        keyCode}, this.CheckFacesMoreOperationCompleted, userState);
        }
        
        private void OnCheckFacesMoreOperationCompleted(object arg) {
            if ((this.CheckFacesMoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFacesMoreCompleted(this, new CheckFacesMoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable UserInfo(string U) {
            object[] results = this.Invoke("UserInfo", new object[] {
                        U});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void UserInfoAsync(string U) {
            this.UserInfoAsync(U, null);
        }
        
        /// <remarks/>
        public void UserInfoAsync(string U, object userState) {
            if ((this.UserInfoOperationCompleted == null)) {
                this.UserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserInfoOperationCompleted);
            }
            this.InvokeAsync("UserInfo", new object[] {
                        U}, this.UserInfoOperationCompleted, userState);
        }
        
        private void OnUserInfoOperationCompleted(object arg) {
            if ((this.UserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserInfoCompleted(this, new UserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/JKK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string JKK(string KeyID) {
            object[] results = this.Invoke("JKK", new object[] {
                        KeyID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void JKKAsync(string KeyID) {
            this.JKKAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void JKKAsync(string KeyID, object userState) {
            if ((this.JKKOperationCompleted == null)) {
                this.JKKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJKKOperationCompleted);
            }
            this.InvokeAsync("JKK", new object[] {
                        KeyID}, this.JKKOperationCompleted, userState);
        }
        
        private void OnJKKOperationCompleted(object arg) {
            if ((this.JKKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JKKCompleted(this, new JKKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getJKK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getJKK(string SName, string strSex, string Sidnum, string OnePhone) {
            object[] results = this.Invoke("getJKK", new object[] {
                        SName,
                        strSex,
                        Sidnum,
                        OnePhone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getJKKAsync(string SName, string strSex, string Sidnum, string OnePhone) {
            this.getJKKAsync(SName, strSex, Sidnum, OnePhone, null);
        }
        
        /// <remarks/>
        public void getJKKAsync(string SName, string strSex, string Sidnum, string OnePhone, object userState) {
            if ((this.getJKKOperationCompleted == null)) {
                this.getJKKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJKKOperationCompleted);
            }
            this.InvokeAsync("getJKK", new object[] {
                        SName,
                        strSex,
                        Sidnum,
                        OnePhone}, this.getJKKOperationCompleted, userState);
        }
        
        private void OngetJKKOperationCompleted(object arg) {
            if ((this.getJKKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJKKCompleted(this, new getJKKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserRegister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserRegister([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bytes, string Phone, string IDno, string RealName, string LoginPass, int VerifyFlag, int CardType, string MedicareNo, string Address, string Healthcard) {
            object[] results = this.Invoke("UserRegister", new object[] {
                        bytes,
                        Phone,
                        IDno,
                        RealName,
                        LoginPass,
                        VerifyFlag,
                        CardType,
                        MedicareNo,
                        Address,
                        Healthcard});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UserRegisterAsync(byte[] bytes, string Phone, string IDno, string RealName, string LoginPass, int VerifyFlag, int CardType, string MedicareNo, string Address, string Healthcard) {
            this.UserRegisterAsync(bytes, Phone, IDno, RealName, LoginPass, VerifyFlag, CardType, MedicareNo, Address, Healthcard, null);
        }
        
        /// <remarks/>
        public void UserRegisterAsync(byte[] bytes, string Phone, string IDno, string RealName, string LoginPass, int VerifyFlag, int CardType, string MedicareNo, string Address, string Healthcard, object userState) {
            if ((this.UserRegisterOperationCompleted == null)) {
                this.UserRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserRegisterOperationCompleted);
            }
            this.InvokeAsync("UserRegister", new object[] {
                        bytes,
                        Phone,
                        IDno,
                        RealName,
                        LoginPass,
                        VerifyFlag,
                        CardType,
                        MedicareNo,
                        Address,
                        Healthcard}, this.UserRegisterOperationCompleted, userState);
        }
        
        private void OnUserRegisterOperationCompleted(object arg) {
            if ((this.UserRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserRegisterCompleted(this, new UserRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckFacesMoreCompletedEventHandler(object sender, CheckFacesMoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFacesMoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFacesMoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserInfoCompletedEventHandler(object sender, UserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void JKKCompletedEventHandler(object sender, JKKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JKKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JKKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getJKKCompletedEventHandler(object sender, getJKKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJKKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJKKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserRegisterCompletedEventHandler(object sender, UserRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591