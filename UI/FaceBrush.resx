<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIUAAAAgCAYAAAA8C7thAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAQoSURBVHhe7ZxPiFVVHMeHKXKR5KI/RgtbCOJGolq1
        qc1sWlSKhAQhJLRy1SKsRW78Ay7azGIWLiqKqFk54CyMQN1lLjREIhJXOhAGEwQNI45ev5+Z+b537pnf
        ew4u4tz3zoUP99zf/Z3fuZzv95zn0/uc+PDL5nF4Sbwp9or3K0XytnhVPC0iDQcSBgMmxZT4RiyIptIZ
        VsRl8YV4WUT6tgiDGfvEdRENWOkW98R3YoeItF4lDK7zvJgXUfFKt/lPHBaR7gNN8Yq4JaKCldHhe/GU
        aOnfulhnj/hHREUqo8eceEL0PJCaAbaLukOMH9Oi54PUEPCTiDpVRp/9YoMpPhBRcmU8uC22ip4pnhR/
        iii5MxyeWSO6939SwjM8JkdEzxTvrQeL56tzTTN7sU9678btprl2sx07+UPTXPp9rf351+2+OdR2v/lf
        +v1geq5pFv7uXw+CGpvJKxR2i0mbYnY9WDwWCxb/7ccRg2vACI6zaolhFoR1X0A88DW13S+Nm6XltTq+
        dn46Njnga5MarnCmMARfRxaTYNEgMjsCq57JJkYbIZh4VjxxYu5D230cA4ubxgDzUC81YIRNwZg2XQTP
        Q04+TqGcwhS7s2DReJJ9tjnSVU7bOZiIHH/Os4s41+K6n8FAjg8zhmsieLQ7GO51yBQXMMW7WbBomFxE
        8zn/CDDEWL3kIAox90co2s7FNN5FMBKH8737RHDfNf1MEYzH2fmFs4ApDmbBomFyEdyGQERWP3FMYCFS
        ESy++6emSA/uubbzN7tTRMY0HdspljDFx1mwaFjRTDB4dWIGBEJsDAIIYdEsDm3yh+0Uru38ze4UI2SK
        FUxxIAsWjU3BZHtnQBDE45qVDbTdJxWIe7kpnGdcnzbGIz/CpmNsj0tf7rkN56+undMxCmYRU7yRBYvG
        2zuTTpvJpm1DIIBN4j4IjFA2EW3HH2UKC+zdBNiJONxmJ+DsuuTT5r4N4+t0nEL5DVM8I3g7J0ooGiaa
        SffkE/O3kjQPM2Ak8lKBbArakP4ZYbOmwITUp52OSx/ONjBgVt8vmG8xBfyaBIsG4Symv1UgRgpxzhbG
        YhIbdnCf/NwUgw6bApPwXIyLQfx8tImRRy3yOBfOIZvi0yRYPIgGFsOi53jlm2G54HzqUp82xmL3yXMR
        Pa/vfikdMYK5K56zKV4USyJKrIwPP4rWP53zokWUWBkP7gtew2yZ4llxR0QdKqPPjFj1QmoKeEc8EFGn
        yujyh1h9wQZyU8BnIupYGU34dNgleh5IzZByXEQFKqPFX+I10dK/dZHxkeBHI1GxSve5InaKDdpvCGTw
        rsXPIipa6Sb81cNRsUVEmj/SFOYtcUYsi2igSvnwe54T4gURadwjDA5hm+AbyjHBT874nQg7SaU8zorT
        4hPxuuB/Dog0zWgmHgKwhvx0laBSVgAAAABJRU5ErkJggg==
</value>
  </data>
</root>